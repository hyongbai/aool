#!/bin/bash
function colorize()
{
  echo -e "\033[;33;1m${1}\033[0m"
}

function exec()
{
    COMMAND="$1"
    if [ ! $PROCESS ]; then
      echo $ERR_TPYE_NONE
      return
    fi
    echo "`eval  "${COMMAND}"`"
}

function cpu_info()
{
    COMMAND="adb shell dumpsys cpuinfo | grep "$PROCESS" | awk '{print \$1}'"
    # echo "$COMMAND"
    echo "`exec "${COMMAND}" `"
}

function mem_info()
{
    COMMAND="adb shell dumpsys meminfo '${PROCESS}'"
    echo "`exec "${COMMAND}" `"
}

function print_info()
{
        # USS
        # USS=$(adb -s $dev shell $COMMAND | grep -i $PROCESS | awk '{print $5}' | cut -d 'K' -f 1)
        MEM=`mem_info| grep TOTAL| awk -FTOTAL '{print $2}'`
        PSS=`echo $MEM | awk '{print $1}'`
        HEAP_TOTAL=`echo $MEM | awk '{print $5}'`
        HEAP_ALLOC=`echo $MEM | awk '{print $6}'`
        HEAP_FREE=`echo $MEM | awk '{print $7}'`

        # CPU
        CPU=`cpu_info`

        #time
        time=`date +"%H:%M:%S"`
        echo "$time   CPU: `colorize "${CPU}"`  MEM: pss=`colorize "$PSS"`, heap:total=`colorize ${HEAP_TOTAL}`/alloc=`colorize ${HEAP_ALLOC}`/free=`colorize $HEAP_FREE` "
}

source basic-method.sh
ERR_TPYE_NONE=ERR_TPYE_NONE
PROCESS="$1"
if [ ! $PROCESS ]; then
    echo "PLS input process name"
    exit
fi
has_device
check_device
# mem_info "$PROCESS" | grep TOTAL
# print_info

echo "--------------------------------------    $PROCESS , `date +\"%y-%m-%d\"`   ------------------------------"
while :
do
      print_info
    # HAS_PROCESS=$(adb -s $dev shell $COMMAND | grep -i $PROCESS)
    # NOT_FOUND=$(adb -s $dev shell $COMMAND | grep "$COMMAND" | grep "not found")
    # if [ $NOT_FOUND ]; then
    #     echo "command $COMMAND is not found !!!!"
    #     # break
    # elif [  ! $HAS_PROCESS ]; then
    #     echo "progress $PROCESS is not found "
    #     # break
    # else
    # fi
    sleep 1;
done
#echo "USS of com.yunio : now=$resu, ave=$ave, COUNT=$COUNT"

